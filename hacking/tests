#!/bin/bash
# -*- coding: utf-8 -*-
# Juicer - Administer Pulp and Release Carts
# Copyright Â© 2012-2014, Red Hat, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

######################################################################
# Catch a ^C exit so the for loops don't keep running
######################################################################
trap "{ exit 0; }" SIGINT SIGTERM
######################################################################

. ./hacking/setup-env

# Oh SWEET. Color codes! Ganked from http://stackoverflow.com/a/10466960/263969
declare -A COLORS

COLORS[RESTORE]='\033[0m'
COLORS[RED]='\033[00;31m'
COLORS[GREEN]='\033[00;32m'
COLORS[YELLOW]='\033[00;33m'
COLORS[BLUE]='\033[00;34m'
COLORS[PURPLE]='\033[00;35m'
COLORS[CYAN]='\033[00;36m'
COLORS[LIGHTGRAY]='\033[00;37m'
COLORS[LRED]='\033[01;31m'
COLORS[LGREEN]='\033[01;32m'
COLORS[LYELLOW]='\033[01;33m'
COLORS[LBLUE]='\033[01;34m'
COLORS[LPURPLE]='\033[01;35m'
COLORS[LCYAN]='\033[01;36m'
COLORS[WHITE]='\033[01;37m'

colorize() {
    # $1 = a COLOR from the table above ^
    # $2 = a quoted string to print out in COLOR
    #
    # NOTE: 'colorize' doesn't print trailing new lines, ergo you may
    # use it inline:
    #
    #    $ echo "black stuff, `colorize GREEN 'green stuff'`, more black stuff
    echo -en "${COLORS[RESTORE]}${COLORS[${1}]}${2}${COLORS[RESTORE]}"
}


######################################################################

colorize 'YELLOW' "#################################\n"
colorize 'YELLOW' "Running repo def validation tests\n"
colorize 'YELLOW' "#################################\n"

# Count how many tests we're running
NUM_TESTS=`ls -1 ./hacking/repo_def/*.json | wc -l`
# Only one of them should pass
MUST_FAIL=$(( ${NUM_TESTS} - 1 ))
colorize 'GREEN' "Expecting `colorize 'GREEN' '1 PASS'` and `colorize 'RED' \"${MUST_FAIL} FAIL\"`s\n"

python ./juicer/utils/ValidateRepoDef.py ./hacking/repo_def/*.json
if [ "$?" == "${MUST_FAIL}" ]; then
    colorize 'GREEN' "Repo def validation tests success: (`colorize 'GREEN' '1 PASS'`/`colorize 'RED' \"${MUST_FAIL} FAIL\"`s)\n"
else
    colorize 'RED' "Repo def validation failed\n"
fi

######################################################################
# Run the rest of the tests
######################################################################

pushd juicer/tests/
mkdir -p /tmp/JTESTS/

TESTID=`date +'%Y%m%d%S'`
export TESTCART="testcart-${TESTID}"
export TESTREPO="testrepo-${TESTID}"
export TESTUSER="testuser-${TESTID}"

for test in test_hello test_pull test_show test_workflow;
do
    colorize 'YELLOW' "#####################################################\n"
    colorize 'YELLOW' "Running TestJuicer.TestJuicer.${test}...\n"
    export JPROFILE=yes
    export JPROFILELOG="/tmp/JTESTS/${test}"
    python -m unittest TestJuicer.TestJuicer.$test
done

for test in test_create_repo test_create_user test_delete_user test_list_repos test_list_roles test_role_add test_show_repo test_show_user;
do
    colorize 'YELLOW' "#####################################################\n"
    colorize 'YELLOW' "Running TestJuicerAdmin.TestJuicerAdmin.${test}...\n"
    export JPROFILE=yes
    export JPROFILELOG="/tmp/JTESTS/${test}"
    python -m unittest TestJuicerAdmin.TestJuicerAdmin.$test
done

popd
